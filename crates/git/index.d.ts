/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export declare function cloneRepository(url: string, path: string): GitRepo
export declare function initRepository(path: string): GitRepo
export declare function findRepository(startPath: string): GitRepo
export declare function isGitRepository(path: string): boolean
export declare function getBranchName(path: string): string
export declare class GitRepo {
  constructor(path: string)
  getHeadCommitHash(): string
  getCurrentBranch(): string
  getRemoteUrl(name: string): string
  createBranch(name: string, targetCommit?: string | undefined | null): void
  checkoutBranch(name: string): void
  getFileStatus(): Array<FileStatus>
  commit(message: string, authorName: string, authorEmail: string): string
  addAll(): void
  push(remoteName: string, branchName: string): void
  getFileMetadata(filePath: string): FileMetadata
  listFilesWithMetadata(directoryPath?: string | undefined | null): Array<FileMetadata>
  getFileHistory(filePath: string): Array<CommitInfo>
  listTags(): Array<TagInfo>
  createTag(tagName: string, message?: string | undefined | null, targetCommit?: string | undefined | null): string
  deleteTag(tagName: string): void
  checkoutTag(tagName: string): void
  checkoutCommit(commitHash: string): void
}
export declare class FileStatus {
  path: string
  isNew: boolean
  isModified: boolean
  isDeleted: boolean
  isRenamed: boolean
  isIgnored: boolean
}
export declare class FileMetadata {
  path: string
  lastCommitHash: string
  lastCommitMessage: string
  lastAuthorName: string
  lastAuthorEmail: string
  lastCommitTime: number
  addedLines: number
  deletedLines: number
}
export declare class CommitInfo {
  commitHash: string
  commitMessage: string
  authorName: string
  authorEmail: string
  commitTime: number
  addedLines: number
  deletedLines: number
}
export declare class TagInfo {
  name: string
  targetCommit: string
  message: string
  taggerName: string
  taggerEmail: string
  tagTime: number
}
